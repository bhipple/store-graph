Derive([("dev","/home/matto/projects/haskell/store-graph/test/store/n7fbd1xsh6pyh9qf76zmqh0vbswbqcpk-ncurses-6.1-dev","",""),("man","/home/matto/projects/haskell/store-graph/test/store/f6yva3j7y7kv0ddxkwrymiwl0j6xbdx9-ncurses-6.1-man","",""),("out","/home/matto/projects/haskell/store-graph/test/store/jndc08i1wczxfix2d2ir21bf67vbm8yc-ncurses-6.1","","")],[("/home/matto/projects/haskell/store-graph/test/store/9kl0jrjszv87c6gigzzbf0yya2m0gpbv-pkg-config-0.29.2.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/l3d6jgkhqr5si07px6b61dkxvwx3kmvs-bash-4.4-p23.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/nfzm6z7jq6zzb3zwnmsb618f2fx1zmds-ncurses-6.1.tar.gz.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/scsj72rdsvjaffdvvkrnb6cn0bbcc2ym-stdenv-linux.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/w5q7cvxg0zcanz0yrplhaiimmff9ixxx-gcc-wrapper-7.3.0.drv",["out"])],["/home/matto/projects/haskell/store-graph/test/store/5q0nwysnrpbdqq23mkd8c2vb44hx5sqb-st-0.7.patch","/home/matto/projects/haskell/store-graph/test/store/gfy5bzzab4h0vf9918qkpfh8qjxld152-clang.patch","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],"x86_64-linux","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash",["-e","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],[("CFLAGS",""),("buildInputs",""),("builder","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash"),("configureFlags","--with-shared --without-debug --enable-pc-files --enable-symlinks --enable-widec"),("depsBuildBuild","/home/matto/projects/haskell/store-graph/test/store/a35fhs9q8s56n2p9an7czi7b003gp8qm-gcc-wrapper-7.3.0"),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/home/matto/projects/haskell/store-graph/test/store/n7fbd1xsh6pyh9qf76zmqh0vbswbqcpk-ncurses-6.1-dev"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("man","/home/matto/projects/haskell/store-graph/test/store/f6yva3j7y7kv0ddxkwrymiwl0j6xbdx9-ncurses-6.1-man"),("name","ncurses-6.1"),("nativeBuildInputs","/home/matto/projects/haskell/store-graph/test/store/dh8vzrdwvdmpfgra3nl081dpcd7i0dgd-pkg-config-0.29.2"),("out","/home/matto/projects/haskell/store-graph/test/store/jndc08i1wczxfix2d2ir21bf67vbm8yc-ncurses-6.1"),("outputs","out dev man"),("patches","/home/matto/projects/haskell/store-graph/test/store/5q0nwysnrpbdqq23mkd8c2vb44hx5sqb-st-0.7.patch /home/matto/projects/haskell/store-graph/test/store/gfy5bzzab4h0vf9918qkpfh8qjxld152-clang.patch"),("postFixup","# Determine what suffixes our libraries have\nsuffix=\"$(awk -F': ' 'f{print $3; f=0} /default library suffix/{f=1}' config.log)\"\nlibs=\"$(ls $dev/lib/pkgconfig | tr ' ' '\\n' | sed \"s,\\(.*\\)$suffix\\.pc,\\1,g\")\"\nsuffixes=\"$(echo \"$suffix\" | awk '{for (i=1; i < length($0); i++) {x=substr($0, i+1, length($0)-i); print x}}')\"\n\n# Get the path to the config util\ncfg=$(basename $dev/bin/ncurses*-config)\n\n# symlink the full suffixed include directory\nln -svf . $dev/include/ncurses$suffix\n\nfor newsuffix in $suffixes \"\"; do\n  # Create a non-abi versioned config util links\n  ln -svf $cfg $dev/bin/ncurses$newsuffix-config\n\n  # Allow for end users who #include <ncurses?w/*.h>\n  ln -svf . $dev/include/ncurses$newsuffix\n\n  for library in $libs; do\n    for dylibtype in so dll dylib; do\n      if [ -e \"$out/lib/lib${library}$suffix.$dylibtype\" ]; then\n        ln -svf lib${library}$suffix.$dylibtype $out/lib/lib$library$newsuffix.$dylibtype\n        ln -svf lib${library}$suffix.$dylibtype.6 $out/lib/lib$library$newsuffix.$dylibtype.6\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib${library}$suffix.$dylibtype $out/lib/libtinfo$newsuffix.$dylibtype\n          ln -svf lib${library}$suffix.$dylibtype.6 $out/lib/libtinfo$newsuffix.$dylibtype.6\n        fi\n      fi\n    done\n    for statictype in a dll.a la; do\n      if [ -e \"$out/lib/lib${library}$suffix.$statictype\" ]; then\n        ln -svf lib${library}$suffix.$statictype $out/lib/lib$library$newsuffix.$statictype\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib${library}$suffix.$statictype $out/lib/libtinfo$newsuffix.$statictype\n        fi\n      fi\n    done\n    ln -svf ${library}$suffix.pc $dev/lib/pkgconfig/$library$newsuffix.pc\n  done\ndone\n\n# move some utilities to $bin\n# these programs are used at runtime and don't really belong in $dev\nmoveToOutput \"bin/clear\" \"$out\"\nmoveToOutput \"bin/reset\" \"$out\"\nmoveToOutput \"bin/tabs\" \"$out\"\nmoveToOutput \"bin/tic\" \"$out\"\nmoveToOutput \"bin/tput\" \"$out\"\nmoveToOutput \"bin/tset\" \"$out\"\nmoveToOutput \"bin/captoinfo\" \"$out\"\nmoveToOutput \"bin/infotocap\" \"$out\"\n"),("preConfigure","export PKG_CONFIG_LIBDIR=\"$dev/lib/pkgconfig\"\nmkdir -p \"$PKG_CONFIG_LIBDIR\"\nconfigureFlagsArray+=(\n  \"--libdir=$out/lib\"\n  \"--includedir=$dev/include\"\n  \"--bindir=$dev/bin\"\n  \"--mandir=$man/share/man\"\n  \"--with-pkg-config-libdir=$PKG_CONFIG_LIBDIR\"\n)\n"),("preFixup","rm \"$out\"/lib/*.a\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("setOutputFlags",""),("src","/home/matto/projects/haskell/store-graph/test/store/w782kbfgnqrl3j6c2zlv28qyx45jxhn1-ncurses-6.1.tar.gz"),("stdenv","/home/matto/projects/haskell/store-graph/test/store/xfipsdm1l52xwm80k0si7yvj7g2qqxfl-stdenv-linux"),("strictDeps",""),("system","x86_64-linux"),("version","6.1")])