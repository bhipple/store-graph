Derive([("out","/home/matto/projects/haskell/store-graph/test/store/9ymdp1l2p3yzqzl0j9zg3zywycp5k9jq-bootstrap-stage0-binutils-wrapper","","")],[("/home/matto/projects/haskell/store-graph/test/store/3sq731s8g9n8qcqk78ralmcgqhxbf81q-bootstrap-stage0-glibc.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/578vw9wryv6jn88hbq4lnhppjnz592fr-bootstrap-stage0-stdenv-linux.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/a4q2m4ks6n9zki8118wmcm4c686zsi38-bootstrap-tools.drv",["out"])],["/home/matto/projects/haskell/store-graph/test/store/1dsyaa18jj9bw9zmwz2r58wxlh9cibl5-setup-hook.sh","/home/matto/projects/haskell/store-graph/test/store/7svqwy2basn7nfkwjv4diir1gn21yn7p-add-flags.sh","/home/matto/projects/haskell/store-graph/test/store/hg8wpwdn95bw6sjgf7gkyqakzym6qzi5-ld-wrapper.sh","/home/matto/projects/haskell/store-graph/test/store/k3dgbj7rp6bgihp1papa4hlsvcja6z62-role.bash","/home/matto/projects/haskell/store-graph/test/store/k5mz5dis4xnxill3g7p43jfwca4bhgv9-add-hardening.sh","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh","/home/matto/projects/haskell/store-graph/test/store/z0lb6v7v7afhvazvkrxmf6157azib7dz-utils.bash"],"x86_64-linux","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin/bash",["-e","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],[("bintools_bin","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools"),("buildInputs",""),("builder","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin/bash"),("configureFlags",""),("coreutils_bin","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("doCheck",""),("doInstallCheck",""),("dontBuild","1"),("dontConfigure","1"),("dynamicLinker","/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib/ld-linux-x86-64.so.2"),("emulation","elf64-x86-64"),("expand-response-params",""),("expandResponseParams","/bin/expand-response-params"),("gnugrep_bin","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools"),("infixSalt","x86_64_unknown_linux_gnu"),("installPhase","set -u\n\nmkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  set +u\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  set -u\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin\"\n# Create a symlink to as (the assembler).\nif [ -e $ldPath/as ]; then\n  ln -s $ldPath/as $out/bin/as\nfi\n\nwrap ld /home/matto/projects/haskell/store-graph/test/store/hg8wpwdn95bw6sjgf7gkyqakzym6qzi5-ld-wrapper.sh ${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /home/matto/projects/haskell/store-graph/test/store/hg8wpwdn95bw6sjgf7gkyqakzym6qzi5-ld-wrapper.sh $underlying\ndone\n\nset +u\n"),("libc_bin","/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc"),("libc_dev","/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc"),("libc_lib","/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc"),("name","bootstrap-stage0-binutils-wrapper"),("nativeBuildInputs",""),("out","/home/matto/projects/haskell/store-graph/test/store/9ymdp1l2p3yzqzl0j9zg3zywycp5k9jq-bootstrap-stage0-binutils-wrapper"),("outputs","out"),("postFixup","set -u\n##\n## General libc support\n##\n\necho \"-L/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib\" > $out/nix-support/libc-ldflags\n\necho \"/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc\" > $out/nix-support/orig-libc\necho \"/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc\" > $out/nix-support/orig-libc-dev\n\n##\n## Dynamic linker support\n##\n\nif [[ -z ${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'x86_64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib/ld*.so.?\"\nfi\n\n# Expand globs to fill array of options\ndynamicLinker=($dynamicLinker)\n\ncase ${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'x86_64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'x86_64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"${dynamicLinker:-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\nif [ -e /home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib/32/ld-linux.so.2 ]; then\n  echo /home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\n\nlocal ldflagsBefore=(-dynamic-linker \"$dynamicLinker\")\nfi\n\n# The dynamic linker is passed in `ldflagsBefore' to allow\n# explicit overrides of the dynamic linker by callers to ld\n# (the *last* value counts, so ours should come first).\nprintWords \"${ldflagsBefore[@]}\" > $out/nix-support/libc-ldflags-before\n##\n## User env support\n##\n\n# Propagate the underling unwrapped bintools so that if you\n# install the wrapper, you get tools like objdump (same for any\n# binaries of libc).\nprintWords /home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools /home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc > $out/nix-support/propagated-user-env-packages\n##\n## Hardening support\n##\n\n# some linkers on some platforms don't support specific -z flags\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nset +u\nsubstituteAll /home/matto/projects/haskell/store-graph/test/store/7svqwy2basn7nfkwjv4diir1gn21yn7p-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /home/matto/projects/haskell/store-graph/test/store/k5mz5dis4xnxill3g7p43jfwca4bhgv9-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /home/matto/projects/haskell/store-graph/test/store/z0lb6v7v7afhvazvkrxmf6157azib7dz-utils.bash $out/nix-support/utils.bash\n\n##\n## Extra custom steps\n##\n"),("preferLocalBuild","1"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("setupHooks","/home/matto/projects/haskell/store-graph/test/store/k3dgbj7rp6bgihp1papa4hlsvcja6z62-role.bash /home/matto/projects/haskell/store-graph/test/store/1dsyaa18jj9bw9zmwz2r58wxlh9cibl5-setup-hook.sh"),("shell","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin/bash"),("stdenv","/home/matto/projects/haskell/store-graph/test/store/h70frsxwknkz8g3fx727mll82a3g9kng-bootstrap-stage0-stdenv-linux"),("strictDeps","1"),("system","x86_64-linux"),("targetPrefix",""),("unpackPhase","src=$PWD\n"),("wrapperName","BINTOOLS_WRAPPER")])