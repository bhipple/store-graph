Derive([("out","/home/matto/projects/haskell/store-graph/test/store/hv506nhy9v6y5n50f5xi9y8azn0xvxql-remove-references-to","","")],[("/home/matto/projects/haskell/store-graph/test/store/1pkqvbd5j31y0jjrdr9bxnlms6l0q333-stdenv-linux.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/l3d6jgkhqr5si07px6b61dkxvwx3kmvs-bash-4.4-p23.drv",["out"])],["/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],"x86_64-linux","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash",["-e","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],[("allowSubstitutes",""),("buildCommand","n=$out/bin/remove-references-to\nmkdir -p \"$(dirname \"$n\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$n\"\nelse\n  echo -n \"$text\" > \"$n\"\nfi\n\n\n\n(test -n \"$executable\" && chmod +x \"$n\") || true\n"),("buildInputs",""),("builder","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash"),("configureFlags",""),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("doCheck",""),("doInstallCheck",""),("executable","1"),("name","remove-references-to"),("nativeBuildInputs",""),("out","/home/matto/projects/haskell/store-graph/test/store/hv506nhy9v6y5n50f5xi9y8azn0xvxql-remove-references-to"),("outputs","out"),("passAsFile","text"),("preferLocalBuild","1"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("stdenv","/home/matto/projects/haskell/store-graph/test/store/lirrgg4n9lvkx62y76vcl25iqcs27bg6-stdenv-linux"),("strictDeps",""),("system","x86_64-linux"),("text","#! /home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash -e\n\n# References to remove\ntargets=()\nwhile getopts t: o; do\n    case \"$o\" in\n        t) storeId=$(echo \"$OPTARG\" | sed -n \"s|^$NIX_STORE/\\\\([a-z0-9]\\{32\\}\\\\)-.*|\\1|p\")\n           if [ -z \"$storeId\" ]; then\n               echo \"-t argument must be a Nix store path\"\n               exit 1\n           fi\n           targets+=(\"$storeId\")\n    esac\ndone\nshift $(($OPTIND-1))\n\n# Files to remove the references from\nregions=()\nfor i in \"$@\"; do\n    test ! -L \"$i\" -a -f \"$i\" && regions+=(\"$i\")\ndone\n\nfor target in \"${targets[@]}\" ; do\n    sed -i -e \"s|$NIX_STORE/$target-|$NIX_STORE/eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee-|g\" \"${regions[@]}\"\ndone\n")])