Derive([("out","/home/matto/projects/haskell/store-graph/test/store/b350y6cs5x8id5khb7s0avdabvn4nr3f-pytest-hook","","")],[("/home/matto/projects/haskell/store-graph/test/store/1pkqvbd5j31y0jjrdr9bxnlms6l0q333-stdenv-linux.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/l3d6jgkhqr5si07px6b61dkxvwx3kmvs-bash-4.4-p23.drv",["out"])],["/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],"x86_64-linux","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash",["-e","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],[("allowSubstitutes",""),("buildCommand","n=$out\nmkdir -p \"$(dirname \"$n\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$n\"\nelse\n  echo -n \"$text\" > \"$n\"\nfi\n\n\n\n(test -n \"$executable\" && chmod +x \"$n\") || true\n"),("buildInputs",""),("builder","/home/matto/projects/haskell/store-graph/test/store/x9ql37gvvykqzxxsfgk1kqhm455p26b1-bash-4.4-p23/bin/bash"),("configureFlags",""),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("doCheck",""),("doInstallCheck",""),("executable",""),("name","pytest-hook"),("nativeBuildInputs",""),("out","/home/matto/projects/haskell/store-graph/test/store/b350y6cs5x8id5khb7s0avdabvn4nr3f-pytest-hook"),("outputs","out"),("passAsFile","text"),("preferLocalBuild","1"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("stdenv","/home/matto/projects/haskell/store-graph/test/store/lirrgg4n9lvkx62y76vcl25iqcs27bg6-stdenv-linux"),("strictDeps",""),("system","x86_64-linux"),("text","pytestcachePhase() {\n    find $out -name .pytest_cache -type d -exec rm -rf {} +\n}\n\npreDistPhases+=\" pytestcachePhase\"\n")])