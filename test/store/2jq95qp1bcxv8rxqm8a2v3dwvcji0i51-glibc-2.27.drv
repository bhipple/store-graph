Derive([("bin","/home/matto/projects/haskell/store-graph/test/store/lrwmyv5ll6wfxrgp5c1srmaa7dnxbf5h-glibc-2.27-bin","",""),("debug","/home/matto/projects/haskell/store-graph/test/store/fimwhm7bazj5n4ig34byfn1awz2xwrdx-glibc-2.27-debug","",""),("dev","/home/matto/projects/haskell/store-graph/test/store/znzw15wj3r76q9w9nwlnh0h8b570racx-glibc-2.27-dev","",""),("out","/home/matto/projects/haskell/store-graph/test/store/q47fkj44gyr08l6fkkx05jzl9i6ibib5-glibc-2.27","",""),("static","/home/matto/projects/haskell/store-graph/test/store/p8k1s799jiyxvhpxbbflr7lakbldcqnc-glibc-2.27-static","","")],[("/home/matto/projects/haskell/store-graph/test/store/3sq731s8g9n8qcqk78ralmcgqhxbf81q-bootstrap-stage0-glibc.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/59aikq4f7cbflx3gd82axp94s069q9pa-glibc-2.27.tar.xz.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/75z9pm8bgnr4yzzx7vzdaz941zrwksh2-bootstrap-stage2-gcc-wrapper.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/a4q2m4ks6n9zki8118wmcm4c686zsi38-bootstrap-tools.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/qghnkq3wrzfsxcxs36sz8q3vhpnwax1n-bootstrap-stage2-stdenv-linux.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/qxl8sgdl2fyzgacscik6sgymk8kxfs2d-linux-headers-4.18.3.drv",["out"]),("/home/matto/projects/haskell/store-graph/test/store/rywv52m4sr6y0yjl4j5wcsxrrj6i7zb1-bison-3.1.drv",["out"])],["/home/matto/projects/haskell/store-graph/test/store/5i410rhgzk1jf1gfx1119z380q98wf2v-nix-locale-archive.patch","/home/matto/projects/haskell/store-graph/test/store/7yvdplabp8kg3ggm2kivf7rmnd0vq1zh-fix-x64-abi.patch","/home/matto/projects/haskell/store-graph/test/store/fqz4amf20qmzb403ljs22v55aw8fwbgg-fix_path_attribute_in_getconf.patch","/home/matto/projects/haskell/store-graph/test/store/gr4y6qypw4rwcqh95y8jrjazz9cjafxp-separate-debug-info.sh","/home/matto/projects/haskell/store-graph/test/store/i7pkbszghcyswr9apfaynz02zwadf25b-dont-use-system-ld-so-cache.patch","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh","/home/matto/projects/haskell/store-graph/test/store/v3zdh9k294j27n172xp0y7lfcjvrqxvi-dont-use-system-ld-so-preload.patch","/home/matto/projects/haskell/store-graph/test/store/vbyknn7lq59lrs03mdxs2lk6as5b22ms-allow-kernel-2.6.32.patch","/home/matto/projects/haskell/store-graph/test/store/ygzqk422yp9lidj2dp870zmc8gxrq8yd-rpcgen-path.patch"],"x86_64-linux","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin/bash",["-e","/home/matto/projects/haskell/store-graph/test/store/khl5mchjvragzhn5d2qlw72cn8kgrmrj-default-builder.sh"],[("BASH_SHELL","/bin/sh"),("NIX_HARDENING_ENABLE","pic strictoverflow format relro bindnow"),("NIX_NO_SELF_RPATH","1"),("bin","/home/matto/projects/haskell/store-graph/test/store/lrwmyv5ll6wfxrgp5c1srmaa7dnxbf5h-glibc-2.27-bin"),("buildInputs",""),("builder","/home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/bin/bash"),("configureFlags","-C --enable-add-ons --enable-obsolete-nsl --enable-obsolete-rpc --sysconfdir=/etc --enable-stackguard-randomization --with-headers=/home/matto/projects/haskell/store-graph/test/store/lfi60hrxb3fgjs77a7if1af70456x23d-linux-headers-4.18.3/include --disable-profile --enable-kernel=3.2.0"),("debug","/home/matto/projects/haskell/store-graph/test/store/fimwhm7bazj5n4ig34byfn1awz2xwrdx-glibc-2.27-debug"),("depsBuildBuild","/home/matto/projects/haskell/store-graph/test/store/wnxrhrnhw1xva7cpm0wqy8w05gqpnnxl-bootstrap-stage2-gcc-wrapper"),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/home/matto/projects/haskell/store-graph/test/store/znzw15wj3r76q9w9nwlnh0h8b570racx-glibc-2.27-dev"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("hardeningDisable","stackprotector fortify"),("installFlags","sysconfdir=$(out)/etc"),("installLocales",""),("is64bit","1"),("linuxHeaders","/home/matto/projects/haskell/store-graph/test/store/lfi60hrxb3fgjs77a7if1af70456x23d-linux-headers-4.18.3"),("name","glibc-2.27"),("nativeBuildInputs","/home/matto/projects/haskell/store-graph/test/store/ijn15pc1g19jp5j27yfqv777gxmfbj0h-bison-3.1 /home/matto/projects/haskell/store-graph/test/store/gr4y6qypw4rwcqh95y8jrjazz9cjafxp-separate-debug-info.sh"),("out","/home/matto/projects/haskell/store-graph/test/store/q47fkj44gyr08l6fkkx05jzl9i6ibib5-glibc-2.27"),("outputs","out bin dev static debug"),("patches","/home/matto/projects/haskell/store-graph/test/store/ygzqk422yp9lidj2dp870zmc8gxrq8yd-rpcgen-path.patch /home/matto/projects/haskell/store-graph/test/store/5i410rhgzk1jf1gfx1119z380q98wf2v-nix-locale-archive.patch /home/matto/projects/haskell/store-graph/test/store/i7pkbszghcyswr9apfaynz02zwadf25b-dont-use-system-ld-so-cache.patch /home/matto/projects/haskell/store-graph/test/store/v3zdh9k294j27n172xp0y7lfcjvrqxvi-dont-use-system-ld-so-preload.patch /home/matto/projects/haskell/store-graph/test/store/fqz4amf20qmzb403ljs22v55aw8fwbgg-fix_path_attribute_in_getconf.patch /home/matto/projects/haskell/store-graph/test/store/vbyknn7lq59lrs03mdxs2lk6as5b22ms-allow-kernel-2.6.32.patch /home/matto/projects/haskell/store-graph/test/store/7yvdplabp8kg3ggm2kivf7rmnd0vq1zh-fix-x64-abi.patch"),("postConfigure","# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"),("postInstall","if test -n \"$installLocales\"; then\n    make -j${NIX_BUILD_CORES:-1} -l${NIX_BUILD_CORES:-1} localedata/install-locales\nfi\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\nfor i in \"$out\"/lib/*.a; do\n    [ \"$i\" = \"$out/lib/libm.a\" ] || $STRIP -S \"$i\"\ndone\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"),("postPatch","# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n"),("preBuild",""),("preConfigure","export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/home/matto/projects/haskell/store-graph/test/store/sk38hbvw26zcbk2iwv51mpdracrx7sqh-bootstrap-stage0-glibc/lib\"\n\n\n"),("preInstall","if [ -f /home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /home/matto/projects/haskell/store-graph/test/store/wdms8vvqaf1va01nxxj554vagasc6spc-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"),("profilingLibraries",""),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("src","/home/matto/projects/haskell/store-graph/test/store/iniq70nysinxjiyk341pp11slp62k62n-glibc-2.27.tar.xz"),("static","/home/matto/projects/haskell/store-graph/test/store/p8k1s799jiyxvhpxbbflr7lakbldcqnc-glibc-2.27-static"),("stdenv","/home/matto/projects/haskell/store-graph/test/store/zqi3zcmf02w0zpfkb1b8bzg4781431dr-bootstrap-stage2-stdenv-linux"),("strictDeps",""),("system","x86_64-linux"),("version","2.27")])